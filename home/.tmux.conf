#-----------------------------------------------------------------------------
# Settings
#-----------------------------------------------------------------------------
## scrollback buffer n lines
set -g history-limit 100000

# Set the default terminal mode to 256color mode.
set -g default-terminal "screen-256color"

# ensure inputrc stuff works
unbind-key -n C-Left
unbind-key -n C-Right
#set-window-option -g xterm-keys on
setw -g xterm-keys on # allow xterm-style function key sequences
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g renumber-windows on
set -sg escape-time 1 # Setting the delay between prefix and command.
set -g base-index 1 # Set the base index for windows to 1 instead of 0.
setw -g pane-base-index 1 # Set the base index for panes to 1 instead of 0.
setw -g automatic-rename on

# Mouse support
setw -g mode-mouse on # enable mouse selection in copy mode
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
set -g mouse-utf8 on

# Enable activity alerts.
setw -g monitor-activity on
set -g visual-activity on

# vi-style controls for copy mode
setw -g mode-keys vi

# instructs tmux to expect UTF-8 sequences
setw -g utf8 on
set -g status-utf8 on

#-----------------------------------------------------------------------------
# Key bindings
#-----------------------------------------------------------------------------
# Setting bind key chord to something actually usable
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix # Ensure that Ctrl-a is sent to other apps

bind r source-file ~/.tmux.conf \; display "Reloaded!" # Reload config
bind-key "~" split-window "exec htop" # quick view of processes
bind-key / command-prompt "split-window 'exec env \
    LESS_TERMCAP_mb=$(printf \"\e[1;31m\") \
    LESS_TERMCAP_md=$(printf \"\e[1;31m\") \
    LESS_TERMCAP_me=$(printf \"\e[0m\") \
    LESS_TERMCAP_se=$(printf \"\e[0m\") \
    LESS_TERMCAP_so=$(printf \"\e[1;44;33m\") \
    LESS_TERMCAP_ue=$(printf \"\e[0m\") \
    LESS_TERMCAP_us=$(printf \"\e[1;32m\") \
    man %%'" # open a man page in new window

## Server/session config
bind-key C-s choose-tree
bind-key C-d choose-client      # choose a client to detach
bind-key d detach             # detach client
bind-key C-r refresh-client # redisplay (default key in tmux is 'r')
bind-key \ confirm-before kill-session # Screen-likish quit
bind-key S set status # toggle statusbar

## Windows
# Moving between windows.
bind -r C-Left select-window -t :-
bind -r C-Right select-window -t :+
bind-key C-l last-window
bind-key C-w choose-window
bind-key C-q confirm-before kill-window

## Panes
bind-key -r Tab select-pane -t :.+ # Cycle to next pane
bind-key W display-panes # display visible indicator of each pane
#bind-key -r J swap-pane -D # swap panes
#bind-key -r K swap-pane -U # swap panes
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log" # Log output to a text file on demand.
bind-key q confirm-before kill-pane

## Buffer
# Vimlike copy mode.
# unbind [
# unbind p
# bind Escape copy-mode
# bind p paste-buffer
# bind -t vi-copy v begin-selection
# bind -t vi-copy C-v rectangle-toggle
# bind -t vi-copy y copy-selection
# bind -t vi-copy Escape cancel

bind-key g run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to system clipboard!"

bind-key x delete-buffer # delete the most recently copied buffer of text (default key was '-')

#-----------------------------------------------------------------------------
# Split windows like vim
#-----------------------------------------------------------------------------
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# resize panes like vim
bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r + resize-pane -U 5
bind-key -r - resize-pane -D 5

# Moving between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#-----------------------------------------------------------------------------
# Statusbar settings
#-----------------------------------------------------------------------------
### use vi-style key bindings in the status line
set -g status-keys vi

### amount of time for which status line messages and other indicators
### are displayed. time is in milliseconds.
set -g display-time 500

#-----------------------------------------------------------------------------
# Styles
#-----------------------------------------------------------------------------
# Pane colors
set -g pane-border-fg colour234
set -g pane-border-bg colour234
set -g pane-active-border-fg colour39
set -g pane-active-border-bg colour39

# Command / message line
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Status bar
set -g status-fg white
set -g status-bg colour234
set -g status-interval 15
set -g status-left-length 60
set -g status-right-length 500
set -g status-left '#[fg=colour10,bg=colour234] #S #[fg=colour234,bg=colour39]⮀#[fg=colour39,bg=colour234,nobold]⮀ #[fg=colour208,bg=colour234]#h'
set -g status-right '#[fg=colour10,bg=colour234]⮂#[fg=colour234,bg=colour10]⮂#[fg=colour10,bg=colour234] #(~/.tmux.battery.sh) #[fg=colour39, bg=colour234]⮂#[fg=colour234,bg=colour39]⮂#[fg=colour10,bg=colour234] %a %b %d %R#[default] '

# window styles
setw -g window-status-activity-fg colour221
set -g window-status-activity-attr default

## default window title colors
set -g window-status-format " #I #W "
setw -g window-status-fg white
setw -g window-status-bg colour234

## active window title colors
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour234,bg=colour39,noreverse,bright,nobold] #I ⮁ #W#[fg=colour39,bg=colour234,nobold]⮀"

# last window styles
setw -g window-status-last-fg colour39

# color of display shown on top-right in copy-mode, highlighting
setw -g mode-bg colour221

#-----------------------------------------------------------------------------
# tmux patch to make vim unnamed clipboard actually work
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#-----------------------------------------------------------------------------
set-option -g default-command "reattach-to-user-namespace -l bash"
